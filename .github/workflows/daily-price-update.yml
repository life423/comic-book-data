name: Daily Comic Price Update

on:
  schedule:
    # Run every day at 6:00 AM EST (11:00 UTC)
    - cron: '0 11 * * *'
  
  # Allow manual triggering for testing
  workflow_dispatch:
  
  # Trigger on pushes to main branch
  push:
    branches: [ main ]

jobs:
  update-prices:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run price scraper
      run: |
        echo "üï∑Ô∏è Starting daily price update..."
        python run_update.py
        echo "‚úÖ Price scraper completed"

    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "üîÑ Changes detected in comic data"
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "üìä No price changes detected"
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Get current date
        CURRENT_DATE=$(date +'%Y-%m-%d')
        
        # Check how many comics were updated by counting changes in the JSON
        UPDATED_COUNT=$(git diff --name-only | grep -c "\.json" || echo "0")
        
        # Add and commit changes
        git add data/spiderman_comics_data.json
        git commit -m "üï∑Ô∏è Daily price update - ${CURRENT_DATE} - Updated comic prices"
        
        # Push changes
        git push
        
        echo "‚úÖ Successfully pushed price updates to repository"

    - name: No changes to commit
      if: steps.verify-changed-files.outputs.changed == 'false'
      run: |
        CURRENT_DATE=$(date +'%Y-%m-%d')
        echo "üìä No price changes on ${CURRENT_DATE} - repository up to date"
